version: '3.8'

services:
  conmed-rl-app:
    build:
      context: ../
      dockerfile: Docker-Deployment/Dockerfile
    container_name: conmed-rl-prod
    environment:
      - FLASK_APP=CDM-Software/web_application_demo.py
      - FLASK_ENV=production
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - conmed-rl-network

  nginx:
    image: nginx:alpine
    container_name: conmed-rl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - conmed-rl-app
    restart: unless-stopped
    networks:
      - conmed-rl-network

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: conmed-rl-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - conmed-rl-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: conmed-rl-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - conmed-rl-network
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  conmed-rl-network:
    driver: bridge 